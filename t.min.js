{;var n=e[t[0]]

 {\n      return normalize(n);\n    }\n  \n    float heightMapTracing(vec3 ori, vec3 dir, out vec3 p) {  \n\n      vec3 oriComp = ori;\n      oriComp.y -= vWorldPosition.y - SEA_HEIGHT;\n\n      float tm = 0.0;\n      float tx = 1000.0;\n      float hx = map(oriComp + dir * tx);\n\n      if(hx > 0.0) {\n        return tx;   \n      }\n  \n      float hm = map(oriComp + dir * tm);    \n      float tmid = 0.0;\n      for(int i = 0; i < NUM_STEPS; i++) {\n        tmid = mix(tm,tx, hm/(hm-hx));                   \n        p = oriComp + dir * tmid;   \n        float hmid = map(p);\n        if(hmid < 0.0) 
